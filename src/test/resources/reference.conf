akka.persistence.journal.plugin = "kafka-journal"
akka.persistence.snapshot-store.plugin = "kafka-snapshot-store"
akka.test.single-expect-default = 20s
akka.test.default-timeout = 20s

kafka-journal.producer.bootstrap.servers = "localhost:6667"
kafka-journal.event.producer.bootstrap.servers = "localhost:6667"
kafka-journal.consumer.bootstrap.servers = "localhost:6667"
kafka-journal.consumer.poll-timeout = 10000

kafka-snapshot-store.producer.bootstrap.servers = "localhost:6667"
kafka-snapshot-store.consumer.bootstrap.servers = "localhost:6667"
kafka-snapshot-store.consumer.poll-timeout = 10000

akka.loggers = ["akka.event.slf4j.Slf4jLogger"]
akka.loglevel = "DEBUG"
akka.logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

akka.actor.allow-java-serialization = on

test-server {
  # -------------------------------------------------------------------
  # Test Kafka server configuration.
  #
  # See http://kafka.apache.org/documentation.html#brokerconfigs
  # -------------------------------------------------------------------
  instances = [${test-server.kafka}]

  kafka {

    broker.id = 1

    port = 6667

    num.partitions = 1

    log.dirs = data/kafka

    #log.index.size.max.bytes = 1024

    transaction.state.log.replication.factor = 1
    transaction.state.log.num.partitions = 5
    transaction.state.log.min.isr = 1
    offsets.topic.num.partitions = 5
    message.max.bytes = 11000000
    replica.fetch.max.bytes = 11000000
  }
}

my-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "fork-join-executor"
  # Configuration for the fork join pool
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 2
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 2.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 64
  }
}